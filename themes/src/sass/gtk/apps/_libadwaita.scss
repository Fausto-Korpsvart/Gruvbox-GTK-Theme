%nautilus_sidebar_style {
	background-color: $background;
	color: on($background);
	border-radius: 0;
	/* margin: 0 6px 0 0; */

	.dim-label {
		color: on($indicator, disabled);
	}
}

%nautilus_content_style {
	background-color: $fill;
	border-radius: $corner-radius;
	margin: 0 $space-size $space-size $space-size;
}

%content_style {
	// background-color: if($variant == 'light', rgba($white, 0.6), $fill);
	// border-radius: $corner-radius;
	margin: $space-size;
}

// Sidebar & Scrollbar
%sidebar_style {
	background-color: if($variant == 'light', $grey-150, $grey-850);

	@if $colorscheme == 'medium' {
		background-color: if($variant == 'light', $grey-150, $black);
	} @else if $colorscheme == 'soft' {
		background-color: if($variant == 'light', $grey-150, #282828);
	}

	color: on($background);
	border-radius: 0;
	margin: 0;

	.dim-label {
		color: on($indicator, disabled);
	}
}

%sidebar_scrollbar {
	> range > trough {
		> slider {
			background-color: $text-disabled;

			&:hover {
				background-color: $text-secondary-disabled;
			}

			&:active {
				background-color: $text-secondary;
			}

			&:disabled {
				background-color: $text-secondary-disabled;
			}
		}
	}

	&.overlay-indicator {
		&:not(.dragging):not(.hovering) {
			button {
				background-color: on($indicator, disabled);

				&:disabled {
					background-color: on($indicator, secondary-disabled);
				}
			}
		}
	}
}

%sidebar_list {
	padding: 6px 0 6px 6px;
	background: none;
	color: $titlebar-text-secondary;

	> separator {
		background-color: $divider;
		margin: 10px 15px;
	}

	> row {
		color: on($indicator, secondary);
		border-radius: $modal-radius;
		color: $text;
		padding: 6px 0;

		&:hover,
		&:active,
		&:focus {
			color: lighten($primary, 15%);
		}

		&:selected {
			background-color: $overlay-hover;
			color: $primary;
			font-weight: 500;

			&:hover,
			&:focus {
				color: lighten($primary, 10%);
			}
		}
	}
}

%sidebar_entry {
	background-color: if(
		$variant == 'light',
		on($indicator, secondary-fill),
		on($indicator, fill)
	);
	color: on($indicator, secondary);
	border-radius: $corner-radius - $space-size;

	&:focus-within {
		color: on($indicator);
	}

	&:drop(active),
	&:hover:not(:focus-within) {
		color: on($indicator);
	}

	&:disabled {
		color: on($indicator, secondary-disabled);
	}

	image {
		// icons inside the entry
		color: on($indicator, secondary);

		&:hover,
		&:active {
			color: on($indicator);
		}

		&:disabled {
			color: on($indicator, secondary-disabled);
		}
	}
}

%round_scrollbar {
	&.top {
		border-bottom: none;
	}
	&.bottom {
		border-top: none;
	}
	&.left {
		border-right: none;
	}
	&.right {
		border-left: none;
	}

	&.overlay-indicator {
		&:not(.dragging):not(.hovering) {
			border-color: transparent;
			background-color: transparent;

			button {
				border: none;
			}
		}

		&.dragging,
		&.hovering {
			background-color: transparent;
		}
	}
}

%round_undershoot {
	&.undershoot-top {
		@include undershoot(top, $br: $corner-radius);
	}

	&.undershoot-bottom {
		@include undershoot(bottom, $br: $corner-radius);
	}

	&.undershoot-start {
		&:dir(ltr) {
			@include undershoot(left, $br: $corner-radius);
		}
		&:dir(rtl) {
			@include undershoot(right, $br: $corner-radius);
		}
	}

	&.undershoot-end {
		&:dir(ltr) {
			@include undershoot(right, $br: $corner-radius);
		}
		&:dir(rtl) {
			@include undershoot(left, $br: $corner-radius);
		}
	}
}

// avatar
avatar {
	border-radius: $circular-radius;
	font-weight: bold;

	// The list of colors to generate avatars.
	// Each avatar color is represented by a font color, a gradient start color and a gradient stop color.
	// There are 8 different colors for avtars in the list if you change the number of them you
	// need to update the NUMBER_OF_COLORS in src/adw-avatar.c.
	// The 2D list has this form: ((font-color, gradient-top-color, gradient-bottom-color)).
	$avatarcolorlist: (
		// blue
		(#cfe1f5, #83b6ec, #337fdc),
		// cyan
		(#caeaf2, #7ad9f1, #0f9ac8),
		// green
		(#cef8d8, #8de6b1, #29ae74),
		// lime
		(#e6f9d7, #b5e98a, #6ab85b),
		// yellow
		(#f9f4e1, #f8e359, #d29d09),
		// gold
		(#ffead1, #ffcb62, #d68400),
		// orange
		(#ffe5c5, #ffa95a, #ed5b00),
		// raspberry
		(#f8d2ce, #f78773, #e62d42),
		// magenta
		(#fac7de, #e973ab, #e33b6a),
		// purple
		(#e7c2e8, #cb78d4, #9945b5),
		// violet
		(#d5d2f5, #9e91e8, #7a59ca),
		// beige
		(#f2eade, #e3cf9c, #b08952),
		// brown
		(#e5d6ca, #be916d, #785336),
		// gray
		(#d8d7d3, #c0bfbc, #6e6d71)
	);

	@for $i from 1 through length($avatarcolorlist) {
		&.color#{$i} {
			$avatarcolor: nth($avatarcolorlist, $i);
			background-image: linear-gradient(
				nth($avatarcolor, 2),
				nth($avatarcolor, 3)
			);
			color: nth($avatarcolor, 1);
		}
	}

	&.contrasted {
		color: $white;
	}

	&.image {
		background: none;
	}
}

// Card
.card {
	@at-root %card,
		& {
		border-radius: $corner-radius;
		border: 1px solid $border;
		background-clip: border-box;
		color: $text-secondary;
		box-shadow: none;
		outline: none;
		background-color: if($variant == 'light', rgba($base, 0.6), $fill);
		color: $text;
	}

	&.activatable {
		@include button(normal);
		background-color: if($variant == 'light', rgba($base, 0.4), $fill);

		&:hover {
			@include button(hover);
		}

		&:active {
			@include button(active);
		}
	}
}

// Toasts
toast {
	margin: $space-size * 2;
	margin-bottom: $space-size * 4;
	border-radius: $circular-radius;
	border-spacing: $space-size;
	padding: $space-size;
	box-shadow:
		$shadow-z6,
		inset 0 1px highlight($popover);
	background-color: $popover;
	color: on($popover);
	border: none;

	&:dir(ltr) {
		padding-left: $space-size * 2;
	}
	&:dir(rtl) {
		padding-right: $space-size * 2;
	}

	> label {
		margin: 0 $space-size;
	}
}

// Viewswitcher
viewswitcher {
	min-height: 0;
	padding: $space-size / 2;
	margin: $space-size 0;
	border-radius: $modal-radius + $space-size / 2;
	background-color: $fill;
	border: none;

	&.wide {
		margin-top: $space-size;
		margin-bottom: $space-size;

		button.toggle {
			margin: 0;
			border-radius: $modal-radius;
		}
	}

	&.narrow button.toggle {
		border-radius: 0;
		margin: 0;

		&:focus-within,
		&:focus {
			box-shadow: none;
		}
	}

	button.toggle {
		font-weight: bold;
		padding: 0;

		> stack > box {
			&.narrow {
				font-size: 0.75rem;
				padding-top: $space-size;
				padding-bottom: $space-size - 2px;
				border-spacing: $space-size - 2px;

				> stack > label {
					padding-left: $space-size;
					padding-right: $space-size;
				}
			}

			&.wide {
				padding: 2px $space-size * 2;
				border-spacing: $space-size;
			}
		}
	}
}

// AdwViewSwitcherBar
viewswitcherbar actionbar > revealer > box {
	padding: 0;

	viewswitcher.narrow button.toggle {
		border-radius: $corner-radius;
		margin: $space-size / 2 0;

		> stack > box {
			&.narrow {
				padding-top: $space-size / 2 + 2px;
				padding-bottom: $space-size / 2 - 2px;
				border-spacing: 0;
			}
		}
	}
}

// AdwViewSwitcherTitle
viewswitchertitle {
	margin-top: 0;
	margin-bottom: 0;

	viewswitcher {
		margin-left: $space-size * 2;
		margin-right: $space-size * 2;

		&.narrow {
			margin-top: 0;
			margin-bottom: 0;

			button.toggle {
				> stack > box {
					&.narrow {
						padding-top: 0;
						padding-bottom: 0;
						border-spacing: 0;
					}
				}
			}
		}

		&.wide {
			margin-top: 0;
			margin-bottom: 0;
		}
	}

	windowtitle {
		margin-top: 0;
		margin-bottom: 0;
	}
}

// AdwIndicatorBin
indicatorbin {
	> indicator,
	> mask {
		min-width: $space-size;
		min-height: $space-size;
		border-radius: $circular-radius;
	}

	> indicator {
		margin: 1px;
		background-color: gtkalpha(currentColor, 0.4);

		> label {
			font-size: 0.6rem;
			font-weight: bold;
			padding: 1px 4px;
			color: $white;
		}
	}

	> mask {
		padding: 1px;
		background: black;
	}

	&.needs-attention > indicator {
		background-color: $primary;

		> label {
			color: on($primary);
		}
	}
}

// preferencespage
preferencespage > scrolledwindow > viewport > clamp > box {
	margin: $space-size * 4 $space-size * 2;
	border-spacing: $space-size * 4;
}

preferencesgroup > box {
	background-preview widget.sidebar,
	widget.header-bar:not(.editable-area) {
		background-color: if($variant == 'light', $grey-150, $grey-950);
	}

	&,
	.labels {
		border-spacing: $space-size;
	}

	> box.header:not(.single-line) {
		margin-bottom: $space-size;
	}

	> box.single-line {
		min-height: 34px;
	}

	button.background-preview-button.toggle {
		padding: 0;
		background: none;
		box-shadow: none;
		outline-color: transparent;
		outline-width: 3px;
		outline-offset: $space-size / 2;
		outline-style: solid;

		&,
		> background-preview {
			border-radius: $corner-radius;
		}

		&:hover {
			outline-color: $fill;
		}

		&:active {
			outline-color: $track;
		}

		&:checked {
			outline-color: $primary;
		}
	}

	.cutout-button {
		background-color: $base-alt;
	}

	button.accent-button {
		min-height: 24px;
		min-width: 24px;
		padding: $space-size / 2;
		border-radius: $modal-radius;
		background: var(--accent-bg-color);
		outline: none;
		background-clip: content-box;
		box-shadow: none;

		&:hover {
			box-shadow: 0 0 0 3px $overlay-hover;
		}

		&:checked {
			box-shadow: 0 0 0 3px $primary;
		}

		&.blue,
		&.teal,
		&.green,
		&.yellow,
		&.orange,
		&.red,
		&.pink,
		&.purple,
		&.slate {
			--accent-color: oklab(
				from var(--accent-bg-color) var(--standalone-color-oklab)
			);
		}

		&.blue {
			--accent-bg-color: var(--accent-blue);
		}

		&.teal {
			--accent-bg-color: var(--accent-teal);
		}

		&.green {
			--accent-bg-color: var(--accent-green);
		}

		&.yellow {
			--accent-bg-color: var(--accent-yellow);
		}

		&.orange {
			--accent-bg-color: var(--accent-orange);
		}

		&.red {
			--accent-bg-color: var(--accent-red);
		}

		&.pink {
			--accent-bg-color: var(--accent-pink);
		}

		&.purple {
			--accent-bg-color: var(--accent-purple);
		}

		&.slate {
			--accent-bg-color: var(--accent-slate);
		}
	}

	box > list.boxed-list-separate {
		background-color: transparent;
		border-radius: $corner-radius;
		border: 1px solid $border;

		& row {
			color: $text-secondary;
			background-color: if($variant == 'light', $base, $fill);
			border-radius: $corner-radius $corner-radius 0 0;
			margin-top: 0px;
			margin-bottom: 0px;

			&:first-child {
				border-radius: $corner-radius $corner-radius 0 0;
				box-shadow: 0 1px $border;
			}

			&:last-child {
				border-radius: 0 0 $corner-radius $corner-radius;
			}

			&:hover,
			&:focus {
				color: $text;
				background-color: $overlay-active;
			}
		}
	}
}

// AdwAboutWindow
window.about {
	.main-page {
		> viewport > clamp > box {
			margin: $space-size * 2;
			border-spacing: $space-size;

			> box {
				margin-top: $space-size * 3;
				border-spacing: $space-size * 3;
				margin-bottom: $space-size;
			}
		}

		.app-version {
			padding: $space-size / 2 $space-size * 3;
			color: $primary;
			border-radius: $corner-radius;
			margin-top: $space-size / 2;
		}
	}

	.subpage {
		> viewport > clamp > box {
			margin: $space-size * 3 $space-size * 2;
			border-spacing: $space-size * 3;
		}

		> clamp > textview {
			background: none;
			color: inherit;
		}
	}
}

// AdwStatusPage
statuspage {
	> scrolledwindow > viewport > box {
		margin: $space-size * 6 $space-size * 2;
		border-spacing: $space-size * 6;

		> clamp > box {
			border-spacing: $space-size * 2;

			> .icon {
				-gtk-icon-size: 128px;

				color: gtkalpha(currentColor, 0.55);

				&:disabled {
					opacity: 0.35;
				}

				&:not(:last-child) {
					margin-bottom: $space-size * 4;
				}
			}
		}
	}

	&.compact > scrolledwindow > viewport > box {
		margin: $space-size * 4 $space-size * 2;
		border-spacing: $space-size * 4;

		> clamp > box {
			> .icon {
				-gtk-icon-size: 96px;

				&:not(:last-child) {
					margin-bottom: $space-size * 2;
				}
			}

			> .title {
				font-size: 18pt;
			}
		}
	}
}

// Transition shadows
flap,
leaflet,
navigation-view,
overlay-split-view {
	@include transition-shadows($frame);
}

.sidebar-pane {
	@extend %sidebar_style;

	color: $text;
	border-top-left-radius: $window-radius;

	.sidebar-pane {
		background-color: transparent;
		color: inherit;
	}

	headerbar,
	.navigation-sidebar,
	searchbar > revealer > box {
		background-color: transparent;
		box-shadow: none;
		border: none;
	}

	.navigation-sidebar {
		padding: $space-size - 4 $space-size - 2; //only vertical padding. horizontal row size would clip
		background: none;
		color: $titlebar-text-secondary;
	}

	&:dir(ltr),
	&.end:dir(rtl) {
		&,
		banner > revealer > widget {
			/* box-shadow: inset 0 1px highlight($base-alt); */
			border-right: 1px solid $border;
		}
	}

	.sidebar,
	toolbarview,
	navigation-view-page stack {
		> scrolledwindow {
			@extend %sidebar_style;

			> scrollbar {
				@extend %sidebar_scrollbar;
				@extend %round_scrollbar;
			}
		}
	}
}

/* Middle pane in three-pane setups */
.content-pane .sidebar-pane,
.sidebar-pane .content-pane {
	background-color: transparent;
	color: $text;

	&:backdrop {
		background-color: transparent;
		transition: none;
	}
}

.content-pane {
	background-color: $background;
	color: $text;
	border-top-right-radius: $window-radius;
	/* box-shadow: inset 0 1px highlight($background); */

	headerbar {
		&,
		&:backdrop {
			background-color: transparent;
			box-shadow: none;
			border: none;
		}
	}

	.maximized &,
	.fullscreen &,
	.tiled &,
	.tiled-top &,
	.tiled-right &,
	.tiled-bottom &,
	.tiled-left & {
		border-radius: 0;
		box-shadow: inset 0 1px highlight($background);
	}
}

// Gnome >= 45.0
.top-bar {
	box-shadow: none;
	background: none;
	border: none;

	headerbar {
		&,
		&:backdrop {
			background-color: transparent;
			box-shadow: none;
		}
	}

	.collapse-spacing {
		padding: 0;
	}
}

// ThemeSelector
themeselector, // Gnome text editor
panelthemeselector {
	// Gnome builder
	margin: $space-size * 1.5;

	checkbutton {
		padding: 0;
		min-height: 44px;
		min-width: 44px;
		padding: 1px;
		background-clip: content-box;
		border-radius: $circular-radius;
		box-shadow: inset 0 0 0 1px $border;

		&.follow:checked,
		&.light:checked,
		&.dark:checked {
			box-shadow: inset 0 0 0 2px $primary;
		}

		&.follow {
			background-image: linear-gradient(
				to bottom right,
				$grey-050 50%,
				$grey-800 50%
			);
		}

		&.light {
			background-color: $grey-050;
		}

		&.dark {
			background-color: $grey-800;
		}

		&.theme-selector radio {
			-gtk-icon-source: none;
			border: none;
			background: none;
			box-shadow: none;
			min-height: 20px;
			min-width: 20px;
			padding: 0;

			&:hover,
			&:active,
			&:checked {
				background-color: transparent;
			}

			&:checked {
				-gtk-icon-size: 20px;
				-gtk-icon-source: -gtk-scaled(
					- gtk-recolor(url('assets/checkbox-checked-symbolic.svg')),
					- gtk-recolor(url('assets/checkbox-checked-symbolic@2.svg'))
				);
				color: on($primary);
				background-color: $primary;

				&,
				&:hover,
				&:active {
					box-shadow:
						0 2px 3px -1px rgba(black, 0.08),
						0 1px 2px 0 rgba(black, 0.1);
				}
			}
		}
	}
}

themeswitcher {
	// Gnome console
	padding: $space-size;

	.check {
		min-height: 20px;
		min-width: 20px;
		background: none;
		padding: 0;
		margin: 0;
		border-radius: $circular-radius;
		color: on($primary);
		background-color: $primary;

		&,
		&:hover,
		&:active {
			box-shadow:
				0 2px 3px -1px rgba(black, 0.08),
				0 1px 2px 0 rgba(black, 0.1);
		}
	}

	checkbutton {
		padding: 0;
		min-height: 44px;
		min-width: 44px;
		padding: 1px;
		background-clip: content-box;
		border-radius: $circular-radius;
		box-shadow: inset 0 0 0 1px $border;

		&:checked {
			box-shadow: inset 0 0 0 2px $primary;
		}

		radio {
			&,
			&:hover,
			&:active,
			&:checked,
			&:checked:hover,
			&:checked:active {
				background-color: transparent;
				border: none;
				background: none;
				box-shadow: none;
				color: transparent;
				-gtk-icon-source: none;
				-gtk-icon-size: 0;
			}
		}

		&.system {
			background: linear-gradient(-45deg, $black 50%, $white 50%);
		}

		&.light {
			color: gtkalpha(black, 0.8);
			background-color: $white;
		}

		&.dark {
			color: $white;
			background-color: $black;
		}
	}
}
